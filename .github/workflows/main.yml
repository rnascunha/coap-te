name: Build
on: 
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      WITH_EXAMPLES:
        description: Compile with examples
        required: true
        default: '1'
env:
  WITH_EXAMPLES: ${{ github.event.inputs.WITH_EXAMPLES || '1' }}
  BUILD_TYPE: Release
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Ubuntu GCC
            os: ubuntu-latest
            cc: gcc
            cxx: g++
            generator: 'Unix Makefiles'
            
          - name: Ubuntu Clang
            os: ubuntu-latest
            cc: clang
            cxx: clang++
            generator: 'Unix Makefiles'
          
          - name: Windows MSVC
            os: windows-latest
            cc: cl
            cxx: cl
            generator: 'Visual Studio 17 2022'
    steps:
      - name: Checking out repostitory
        uses: actions/checkout@v2

      - name: Install Conan
        id: install-conan
        uses: turtlebrowser/get-conan@main
        
      - name: Create default Conan profile
        run: conan profile new default --detect
        
      - name: Conan configure remotes
        run:  |
            conan remote add owner https://rnascunha.jfrog.io/artifactory/api/conan/owner-conan
            conan config set general.revisions_enabled=1
            
      - name: Conan install dependencies
        run: >-
            conan install . 
              -s build_type=${{env.BUILD_TYPE}} 
              -if ${{github.workspace}}/build 
              -pr default 
              -b missing
            
      - name: CMake configure
        run: >-
          cmake -G "${{matrix.config.generator}}" 
                -DCMAKE_C_COMPILER=${{ matrix.config.cc }} 
                -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx}} 
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
                -DWITH_EXAMPLES=$WITH_EXAMPLES 
                -B ${{github.workspace}}/build
                
      - name: Build library
        run: >-
          cmake 
            --build ${{github.workspace}}/build 
            --config ${{env.BUILD_TYPE}}
